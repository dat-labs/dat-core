# generated by datamodel-codegen:
#   filename:  DatMessage.yml
#   timestamp: 2023-12-01T07:57:48+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import AnyUrl, BaseModel, Extra, Field


class Type(Enum):
    RECORD = 'RECORD'
    STATE = 'STATE'
    LOG = 'LOG'
    SPEC = 'SPEC'
    CONNECTION_STATUS = 'CONNECTION_STATUS'
    CATALOG = 'CATALOG'
    TRACE = 'TRACE'


class ConnectorSpecification(BaseModel):
    class Config:
        extra = Extra.allow

    protocol_version: Optional[str] = Field(
        None,
        description='the Vectorize Protocol version supported by the connector. Protocol versioning uses SemVer.',
    )
    documentationUrl: Optional[AnyUrl] = None
    changelogUrl: Optional[AnyUrl] = None
    connectionSpecification: Dict[str, Any] = Field(
        ...,
        description='ConnectorDefinition specific blob. Must be a valid JSON string.',
    )
    supportsIncremental: Optional[bool] = Field(
        None, description='If the connector supports incremental mode or not.'
    )
    supported_destination_sync_modes: Optional[List[Any]] = Field(
        None, description='List of destination sync modes supported by the connector'
    )


class Status(Enum):
    SUCCEEDED = 'SUCCEEDED'
    FAILED = 'FAILED'


class VectorizeConnectionStatus(BaseModel):
    class Config:
        extra = Extra.allow

    status: Status
    message: Optional[str] = None


class SyncMode(Enum):
    full_refresh = 'full_refresh'
    incremental = 'incremental'


class DocumentStream(BaseModel):
    name: str
    dir_uris: Optional[List[str]] = None
    sync_mode: SyncMode


class VectorizeCatalog(BaseModel):
    document_streams: List[DocumentStream]


class DatMessage(BaseModel):
    class Config:
        extra = Extra.allow

    type: Type = Field(..., description='Message type')
    spec: Optional[ConnectorSpecification] = None
    connectionStatus: Optional[VectorizeConnectionStatus] = None
    catalog: Optional[VectorizeCatalog] = Field(
        None, description='catalog message: the catalog'
    )

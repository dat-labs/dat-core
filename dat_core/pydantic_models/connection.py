# generated by datamodel-codegen:
#   filename:  Connection.yml
#   timestamp: 2024-02-17T19:41:55+00:00

from __future__ import annotations
from typing import Optional

from pydantic import BaseModel, Field
from dat_core.pydantic_models import ConnectorSpecification, DatCatalog


class Connection(BaseModel):
    class Config:
        extra = 'allow'

    name: Optional[str] = Field(
        None,
        description='The name of the connection.',
    )
    namespace_format: str = Field(
        None,
        description='The namespace format of the connection.',
    )
    prefix: Optional[str] = Field(
        None,
        description='The prefix of the connection.',
    )
    catalog: Optional[DatCatalog] = Field(
        None,
        description='The catalog of the connection.',
    )
    source: ConnectorSpecification = Field(
        ...,
        description='The source connector specification.',
    )
    generator: ConnectorSpecification = Field(
        ...,
        description='The generator connector specification.',
    )
    destination: ConnectorSpecification = Field(
        ...,
        description='The destination connector specification.',
    )

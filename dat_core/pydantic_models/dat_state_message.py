# generated by datamodel-codegen:
#   filename:  DatStateMessage.yml
#   timestamp: 2024-05-09T10:54:19+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, Optional
from datetime import datetime
from pydantic import BaseModel, Field
from dat_core.pydantic_models.dat_document_stream import DatDocumentStream


class StreamStatus(Enum):
    STARTED = 'STARTED'
    RUNNING = 'RUNNING'
    COMPLETED = 'COMPLETED'


class StreamState(BaseModel):
    data: Dict[str, Any] = Field(..., description='the state data')
    stream_status: Optional[StreamStatus] = Field(
        None, description='the stream status')
    emitted_at: Optional[float] = Field(
        ...,
        description='when the data was emitted from the source. epoch in millisecond.',
        default_factory=lambda: datetime.now().timestamp(),
    )



class DatStateMessage(BaseModel):
    class Config:
        extra = 'allow'

    stream: DatDocumentStream
    stream_state: StreamState

# generated by datamodel-codegen:
#   filename:  DatDocumentStream.yml
#   timestamp: 2024-04-01T12:19:15+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, Optional

from pydantic import BaseModel, Field
from dat_core.pydantic_models.base import EnumWithStr


class ReadSyncMode(EnumWithStr):
    full_refresh = 'full_refresh'
    incremental = 'incremental'


class WriteSyncMode(EnumWithStr):
    append = 'append'
    upsert = 'upsert'
    replace = 'replace'


class DatDocumentStream(BaseModel):
    name: str = Field(..., description='The name of the document stream.')
    namespace: Optional[str] = Field(
        None, description='The namespace the data is associated with.'
    )
    json_schema: Optional[Dict[str, Any]] = Field(
        None, description='The JSON schema for the document stream.'
    )
    read_sync_mode: Optional[ReadSyncMode] = Field(
        'incremental',
        description='A list of supported sync modes for the stream while reading.',
    )
    write_sync_mode: Optional[WriteSyncMode] = Field(
        'append',
        description='A list of supported sync modes for the stream while writing.',
    )
    cursor_field: Optional[str] = Field(
        None,
        description='The path to the field used to determine if a record is new or modified.\nREQUIRED for incremental sync mode.',
    )

# generated by datamodel-codegen:
#   filename:  DatLogMessage.yml
#   timestamp: 2024-04-03T10:02:34+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional
from datetime import datetime
from pydantic import BaseModel, Field


class Level(Enum):
    FATAL = 'FATAL'
    ERROR = 'ERROR'
    WARNING = 'WARNING'
    INFO = 'INFO'
    DEBUG = 'DEBUG'
    TRACE = 'TRACE'


class DatLogMessage(BaseModel):
    class Config:
        extra = 'allow'

    level: Level = Field(..., description='log level of the log message')
    message: str = Field(..., description='log message')
    stack_trace: Optional[str] = Field(
        None,
        description='an optional stack trace if the log message corresponds to an exception',
    )
    emitted_at: Optional[float] = Field(
        ...,
        description='when the data was emitted from the source. epoch in millisecond.',
        default_factory=lambda: datetime.now().timestamp()
    )
    
